<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://k-hyeongi.github.io/</id><title>Hyeon Git-Hub</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-03-10T00:13:55+09:00</updated> <author> <name>kimhyeongi</name> <uri>https://k-hyeongi.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://k-hyeongi.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://k-hyeongi.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 kimhyeongi </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>React - JSX 알아보기</title><link href="https://k-hyeongi.github.io/posts/understanding-jsx/" rel="alternate" type="text/html" title="React - JSX 알아보기" /><published>2022-03-09T22:00:00+09:00</published> <updated>2022-03-09T22:00:00+09:00</updated> <id>https://k-hyeongi.github.io/posts/understanding-jsx/</id> <content src="https://k-hyeongi.github.io/posts/understanding-jsx/" /> <author> <name>kimhyeongi</name> </author> <category term="Web" /> <category term="React" /> <summary> 요약 근본적으로 JSX 파일은 React.createElement (component, props, … , children)에 대한 문법적 설탕을 제공하는 것 그 이상도 그 이하도 아니다. HTML &amp;lt;MyButton color=“blue” shadowSize={2}&amp;gt; Click Me &amp;lt;/MyButton&amp;gt; 이 HTML파일을 JSX파일로 컴파일 JSX React.createElement( MyButton, {color: ‘blue’, shadowSize: 2}, ’Click Me’ ) HTML을 JSX로 컴파일하는 또다른 예시 HTML &amp;lt;div className=“sidebar” /&amp;gt; JSX React.createElement( ‘div’, {classN... </summary> </entry> <entry><title>Data Structure (#1) Hash Table</title><link href="https://k-hyeongi.github.io/posts/hashTable/" rel="alternate" type="text/html" title="Data Structure (#1) Hash Table" /><published>2022-02-27T21:40:00+09:00</published> <updated>2022-02-28T22:19:07+09:00</updated> <id>https://k-hyeongi.github.io/posts/hashTable/</id> <content src="https://k-hyeongi.github.io/posts/hashTable/" /> <author> <name>kimhyeongi</name> </author> <category term="CS" /> <category term="Data Structure" /> <summary> 해시 테이블 해시테이블은 해시 함수를 활용해서 키를 해시값으로 매핑하고, 이 해시값을 색인(인덱스) 또는 주소 삼아 데이터를 key와 함께 저장하는 자료구조를 뜻한다. ➡️ [key:value]로 데이터를 저장하는 자료구조 그리고 해시란, 키와 값이 한 쌍으로 구성된 데이터를 가리킨다. 출처: 위키백과_해시테이블 해시 테이블의 구성 해시테이블은 키(key), 값(value), 해시함수(hash function), 해시(hash), 데이터가 저장되는 곳(bucket, slot)으로 구성되어 있다. 처음에 해시 테이블에 대해 들었을때 총체적 난국이었다. 해시는 뭐고, 해시 함수는 뭐고, 이게 왜 효율적인 자료구조라는거야? cs는 대부분 영어를 해석해야 되기 때문에 직관적으로 이해하기는 어려운 것... </summary> </entry> <entry><title>React 웹앱 구현하기 (생활코딩)</title><link href="https://k-hyeongi.github.io/posts/react-app-dailylife/" rel="alternate" type="text/html" title="React 웹앱 구현하기 (생활코딩)" /><published>2022-02-20T18:00:00+09:00</published> <updated>2022-03-08T00:00:25+09:00</updated> <id>https://k-hyeongi.github.io/posts/react-app-dailylife/</id> <content src="https://k-hyeongi.github.io/posts/react-app-dailylife/" /> <author> <name>kimhyeongi</name> </author> <category term="Web" /> <category term="React" /> <summary> npm 그리고 npx npx 명령어를 사용해서 패키지를 설치할 때도 있고, npm 명령어를 사용해서 할 때도 있다. 둘 사이의 차이점이 모호할 때가 종종 있는데 무슨 차이가 있는지 알아볼 필요가 있다. 깊게 들어가보면 많은 차이가 있겠지만, 중점적으로 알면 좋을 것들만 알아보자. npx는 새로운 패키지 관리 모듈은 아니다. 기존 자바스크립트 패키지 관리 모듈인 npm(Node Package Module)의 5.2.0 버전부터 npm에 추가가 되었는데, 이는 npm의 단점을 보완해 npm을 더 편히 사용하게 해주는 도구임을 의미한다. npx란 npx는 npm에 올라가있는 패키지를 쉽게 설치하고 관리할 수 있게 도와주는 CLI 도구이다. npm을 통해 설치할 수 있는 모든 종류의 node.js기반... </summary> </entry> <entry><title>JavaScript and Node.js</title><link href="https://k-hyeongi.github.io/posts/js-and-nodejs/" rel="alternate" type="text/html" title="JavaScript and Node.js" /><published>2022-02-13T00:30:00+09:00</published> <updated>2022-02-13T00:30:00+09:00</updated> <id>https://k-hyeongi.github.io/posts/js-and-nodejs/</id> <content src="https://k-hyeongi.github.io/posts/js-and-nodejs/" /> <author> <name>kimhyeongi</name> </author> <category term="Web" /> <category term="JavaScript" /> <summary> 프로그래밍 언어란 무엇인가 프로그래밍 언어는 말 그대로 언어의 일종이다. 내가 영어라는 언어를 배우는 이유가 미국인과 대화하고 싶어서 인 것처럼 컴퓨터와 대화를 하고 싶어서 배우는 게 프로그래밍 언어이다. 즉, 사람과 컴퓨터가 서로 의사소통을 할 수 있게 해주는 수단이자 도구인 것이다. Q. 왜 프로그래밍 언어는 여러 개일까 그건 나와 같이 개발을 배우는 학부생의 입장에서는 별로 중요하지 않다. 간략하게 기업들은 본인들이 컨트롤할 수 없는 외부의 언어보다 본인들이 컨트롤할 수 있는 언어를 선호한다. 결론은 내가 만들고 싶은 제품(Ex. ios, android)을 서비스하는 플랫폼(Ex. apple, google)이 권장하는 프로그래밍 언어를 배우면 된다. JavaScript란... </summary> </entry> <entry><title>(#2) javascript 복습하기 (함수 ~ 배열)</title><link href="https://k-hyeongi.github.io/posts/js-review-2/" rel="alternate" type="text/html" title="(#2) javascript 복습하기 (함수 ~ 배열)" /><published>2022-02-10T14:49:30+09:00</published> <updated>2022-02-10T14:49:30+09:00</updated> <id>https://k-hyeongi.github.io/posts/js-review-2/</id> <content src="https://k-hyeongi.github.io/posts/js-review-2/" /> <author> <name>kimhyeongi</name> </author> <category term="Web" /> <category term="JavaScript" /> <summary> 서론 앞서 포스팅했던 자바스크립트 자료형부터 연산자까지 복습한 것에 이어서 나머지 자바스크립트 기초적인 내용들을 복습해보고자 한다. 함수 전역변수 &amp;amp; 지역변수 let msg = "welcome"; // 전역변수 console.log(msg); // welcome function sayHello(name) { let msg = "hello"; // 지역변수 console.log(msg + ", " + name); } sayHello('Justin'); // hello, Justin console.log(msg); // welcome 전역변수와 지역변수는 서로에게서 간섭을 받지 않는다. 그러나 전체 서비스에서 공통으로 사용되는 변수를 제외하고는 지역변수를 사용하는 ... </summary> </entry> </feed>
